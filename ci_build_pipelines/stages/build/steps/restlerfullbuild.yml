steps:
  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.4'
    inputs:
      versionSpec: 5.4

  - task: NuGetCommand@2
    displayName: 'NuGet restore solution'
    inputs:
      restoreSolution: '**\Restler.sln'

  - task: DotNetCoreCLI@2
    displayName: 'Publish RESTler dotnet core projects'
    inputs:
      command: publish
      publishWebProjects: false
      projects: |
        src/compiler/Restler.CompilerExe/Restler.CompilerExe.fsproj
        src/driver/Restler.Driver.fsproj
        src/ResultsAnalyzer/ResultsAnalyzer.fsproj
      arguments: '--no-restore -c $(buildConfiguration) /p:version=$(versionNumber)'
      zipAfterPublish: false

  - task: DotNetCoreCLI@2
    displayName: 'Build unit tests'
    inputs:
      command: build
      projects: |
        src/compiler/Restler.Compiler.Test/Restler.Compiler.Test.fsproj
      arguments: '--no-restore -c $(buildConfiguration)'

  - task: UsePythonVersion@0
    displayName: Use Python version 3.8.
    inputs:
      versionSpec: '3.8'
    name: pyTools

  - script: |
      pip install -r ./restler/requirements.txt
      pip install -r ./demo_server/requirements.txt
    displayName: Install requirements

  - script: |
      python ./build-restler.py --dest_dir $(Agent.BuildDirectory)/restler_drop
    failOnStderr: true
    displayName: Build RESTler drop

  - task: ArchiveFiles@2
    displayName: Archive RESTler drop
    inputs:
      rootFolderOrFile: $(Agent.BuildDirectory)/restler_drop/
      includeRootFolder: false
      archiveFile: $(Build.ArtifactStagingDirectory)/restler-fuzzer-drop-$(versionNumber).zip

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/restler-fuzzer-drop-$(versionNumber).zip'
      artifactName: 'restler-fuzzer-drop-$(versionNumber)'
      publishLocation: 'Container'

